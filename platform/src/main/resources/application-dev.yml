spring:
  session:
    store-type: redis
  datasource:
    username: root
    password: yangwulang
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/platform?serverTimezone=UTC
    #dataSourceNames: ["ds2"]
    #ds2:
      #username: xxx
      #password: xxx
      #url: xxx
  flyway:
    baseline-on-migrate: true
    locations: classpath:db/migration/mysql
    url: jdbc:mysql://localhost:3306/platform?serverTimezone=UTC
    user: root
    password: yangwulang
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect

  cache:
#    缓存及会话共享 是否决定开启redis缓存
    cluster-mode: true
#    清理全部缓存按钮所清理的缓存列表
#    clearNames: sysCache,corpCache,userCache,cmsCache,msgPcPoolCache
  quartz:
    job-store-type: jdbc
    properties:
      org:
        quartz:
          scheduler:
            instanceName: free_platform
            instanceId: AUTO
          jobStore:
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            #tablePrefix: qrtz_  #数据库表前缀
            #clusterCheckinInterval: 5000 #设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度
            #isClustered: true #打开群集功能
            #threadPool: #连接池
            #class: org.quartz.simpl.SimpleThreadPool
            #threadCount: 10
            #threadPriority: 5
            #threadsInheritContextClassLoaderOfInitializingThread: true
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      ssl: false
      database: 0
      timeout: 2000
      password: yangwulang
      lettuce:
        pool:
          max-idle: 3
          max-active: 20


knife4j:
  enable: true
  setting:
    language: zh_cn


adminPath: /api



jetcache:
  statIntervalMinutes: 15
  areaInCacheName: true
  local:
    default:
      type: caffeine #other choose：caffeine
      keyConvertor: jackson #other choose：fastjson/jackson
      limit: 1000
    sysArea:
      type: caffeine
      keyConvertor: jackson #other choose：fastjson/jackson
      limit: 1000
  remote:
    default:
      type: redis
      keyConvertor: jackson #other choose：fastjson/jackson
      broadcastChannel: projectA
      valueEncoder: java #other choose：kryo/kryo5
      valueDecoder: java #other choose：kryo/kryo5
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${spring.data.redis.host}
      port: ${spring.data.redis.port}
    sysArea:
      type: redis.lettuce
      keyConvertor: fastjson #other choose：fastjson/jackson
      broadcastChannel: projectA
      valueEncoder: java #other choose：kryo/kryo5
      valueDecoder: java #other choose：kryo/kryo5
      uri: redis://yangwulang@${spring.data.redis.host}:${spring.data.redis.port}/0?timeout=5s
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50

sa-token:
  token-name: satoken
  timeout: -1
  is-concurrent: true
  is-share: false
  is-log: true

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: top.yangwulang.platform.controller


